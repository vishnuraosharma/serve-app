/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import AppSystem.Network;
import Enterprise.Enterprise;
import Organization.Organization;
import Organization.ProductManagement.OrderItem;
import Organization.ProductManagement.ProductOrder;
import Requests.ApplicationRequest;
import Requests.ConvenienceRequest;
import Requests.DeliveryRequest;
import Requests.RequestDirectory;
import Requests.ServiceRequest;
import UserAccount.UserAccount;
import Volunteer.VolunteerProfile;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khatna
 */
public class RequestQueue extends javax.swing.JPanel {
    private Network appSystem;
    private UserAccount useraccount;
    DefaultTableModel viewtableModel;
    Enterprise enterprise;
    Organization organization;  
    DefaultTableModel viewTableModel;
    boolean isDelivery = false;
    boolean isConvenience = false;
    boolean isService = false;
    /**
     * Creates new form RequestQueue
     */
    public RequestQueue(Network appSystem, Enterprise enterprise, Organization organization,UserAccount useraccount) {
        initComponents();
        this.setSize(1120,800);
        this.setVisible(true);
        this.appSystem = appSystem;
        this.useraccount = useraccount;
        this.enterprise = enterprise;
        this.organization = organization;   
        this.viewTableModel = (DefaultTableModel) jTable1.getModel();
        jPanel1.setVisible(false);
        System.out.println(this.appSystem.getReqDir().getDeliveryRequests().size());
        switch (this.useraccount.getRole().getRoleType()) {
            case "Convenience Volunteer":
                displayDeliveryReqs();
                break;
            case "Healthcare Specialist":
            case "Legal Specialist":
            case "Connection Volunteer":
                displayServiceRequests();
                break;
            default:
                displayConvenienceRequests();
                break;
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        reqID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        reqRequester = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        reqDate = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        reqStatus = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        reqLocation = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1300, 800));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestID", "Requester", "Request Date", "Delivery Location", "Request Status", "Assigned To"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Request Details", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Request ID");

        reqID.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        reqID.setForeground(new java.awt.Color(255, 255, 255));
        reqID.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Requester");

        reqRequester.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        reqRequester.setForeground(new java.awt.Color(255, 255, 255));
        reqRequester.setText("jLabel1");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Request Date");

        reqDate.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        reqDate.setForeground(new java.awt.Color(255, 255, 255));
        reqDate.setText("jLabel1");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Request Status");

        reqStatus.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        reqStatus.setForeground(new java.awt.Color(255, 255, 255));
        reqStatus.setText("jLabel1");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Delivery includes the product items below");

        reqLocation.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        reqLocation.setForeground(new java.awt.Color(255, 255, 255));
        reqLocation.setText("jLabel1");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Delivery Location");

        jButton1.setBackground(new java.awt.Color(236, 100, 44));
        jButton1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Assign to me");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reqID, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reqRequester, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reqDate, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reqStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(reqLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(316, Short.MAX_VALUE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reqStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reqDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reqRequester, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reqID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(reqLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        int selectedR = jTable1.getSelectedRow();
        
        RequestDirectory reqDir = appSystem.getReqDir();
              
        DeliveryRequest selectedRequest = (DeliveryRequest) reqDir.findRequestById(jTable1.getValueAt(selectedR, 0).toString());
         jPanel1.setVisible(true);
         DateFormat format = new SimpleDateFormat("dd-MM-yyyy");
         
        reqID.setText(selectedRequest.getRequestID());
//        reqRequester.setText(selectedRequest.getConvenienceReq().getProductOrder().getClient().getName());
        reqRequester.setText(selectedRequest.getRequester().getPerson().getName());
        String dateStr = format.format(selectedRequest.getRequestDate());
        reqDate.setText(dateStr);
        
        reqStatus.setText(selectedRequest.getStatus());
        
//        ProductOrder po = selectedRequest.getConvenienceReq().getProductOrder();
        ProductOrder po = selectedRequest.getOrderToBedelivered();
        DefaultListModel<String> listModel = new DefaultListModel<String>();
        for(OrderItem oi: po.getProductsPurchased()){
            listModel.addElement(oi.getSelectedProduct().getName());
        }
        jList1.setModel(listModel);
        
        reqLocation.setText(selectedRequest.getDeliveryAddress());
        
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedR = jTable1.getSelectedRow();
        
        RequestDirectory reqDir = appSystem.getReqDir();
              
        DeliveryRequest selectedRequest = (DeliveryRequest) reqDir.findRequestById(jTable1.getValueAt(selectedR, 0).toString());
        selectedRequest.setRequestResponder(this.useraccount);
        viewTableModel.setValueAt((selectedRequest.getRequestResponder() != null ? "Out For Delivery" : "Created"), selectedR, 4);
        viewTableModel.setValueAt(selectedRequest.getRequestResponder().getPerson().getName(), selectedR, 5);
        
        VolunteerProfile vol = (VolunteerProfile) this.useraccount.getPerson();
        vol.addToVolunteerRequests(selectedRequest);
        JOptionPane.showConfirmDialog(null, "Thank you for your time and care!");
                
//                : "Created"), selectedR, 3);
//        viewTableModel.setValueAt((selectedRequest.getApp().getStatus().equals("Approved") ? "Approved" : "Pending"), selectedR, 4);
//        viewTableModel.fireTableDataChanged();
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
     public void displayDeliveryReqs(){
        viewTableModel.setRowCount(0);
        RequestDirectory reqDir = appSystem.getReqDir();
//        System.out.println(reqDir.getAllRequests().toString());
        
        for (Map.Entry<String, DeliveryRequest> entry : reqDir.getDeliveryRequests().entrySet()) {

                DeliveryRequest delReq = entry.getValue();
                Object row[] = new Object[6];
                DateFormat format = new SimpleDateFormat("dd-MM-yyyy");
                row[0] = delReq.getRequestID();
                row[1] = delReq.getRequester().getPerson().getName();
                row[2] = format.format(((DeliveryRequest) entry.getValue()).getRequestDate());
                row[3] = delReq.getDeliveryAddress();
                row[4] = delReq.getStatus();
                row[5] = (delReq.getRequestResponder() != null ? delReq.getRequestResponder().getPerson().getName() : "None") ;
                
                
                viewTableModel.addRow(row);           
        }  
             isDelivery = true;
             isConvenience = false;
             isService = false;

    }
       public void displayConvenienceRequests(){
            viewTableModel.setRowCount(0);
            RequestDirectory reqDir = appSystem.getReqDir();
             
        for (Map.Entry<String, ConvenienceRequest> entry : reqDir.getConvenienceRequests().entrySet()) {

                ConvenienceRequest convReq = entry.getValue();
                 
                 
                 
                 Object row[] = new Object[4];
                DateFormat format = new SimpleDateFormat("dd-MM-yyyy");
                row[0] = convReq.getRequestID();
                row[1] = convReq.getRequester().getPerson().getName();
                row[2] = format.format(convReq.getRequestDate());
                row[3] = convReq.getStatus();
                 
                viewTableModel.addRow(row);  
                 
            }
        isDelivery = false;
        isService = false;
        isConvenience = true;
        
        }
       
        public void displayServiceRequests(){
        viewTableModel.setRowCount(0);
        RequestDirectory reqDir = appSystem.getReqDir();

        for (Map.Entry<String, ServiceRequest> entry : reqDir.getServiceRequests().entrySet()) {
                ServiceRequest serviceReq = entry.getValue();
                 Object row[] = new Object[4];
                DateFormat format = new SimpleDateFormat("dd-MM-yyyy");
                row[0] = serviceReq.getRequestID();
                row[1] = serviceReq.getRequester().getPerson().getName();
                row[2] = format.format(serviceReq.getRequestDate());
                row[3] = serviceReq.getStatus();
                 
                viewTableModel.addRow(row);  
                 
            } 
        isDelivery = false;
        isConvenience = false;
        isService = true;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel reqDate;
    private javax.swing.JLabel reqID;
    private javax.swing.JLabel reqLocation;
    private javax.swing.JLabel reqRequester;
    private javax.swing.JLabel reqStatus;
    // End of variables declaration//GEN-END:variables
}
